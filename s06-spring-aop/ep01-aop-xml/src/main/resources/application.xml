<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:jdbc="http://www.springframework.org/schema/jdbc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="
        http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd 
        http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc.xsd 
        http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd 
        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">

	<!-- bean definitions here -->
	<context:component-scan base-package="com.jdc.spring.aop.service"></context:component-scan>
	
	<jdbc:embedded-database type="H2">
		<jdbc:script location="classpath:/schema.sql"/>
	</jdbc:embedded-database>
	
	<bean id="loggingAspect" class="com.jdc.spring.aop.aspects.LoggingAspect"></bean>
	
	<aop:config >
		<aop:aspect ref="loggingAspect">
			<aop:pointcut expression="execution(int com.jdc.spring.aop.service.*.create(*)) and args(form)" id="beforeInsert"/>
			<aop:around method="arroundAdvice" pointcut="execution(* *(int))"/>
			
			<aop:before method="beforeAdvice" pointcut-ref="beforeInsert" arg-names="form" />
			<aop:after-returning method="afterReturningAdvice" 
				pointcut="@annotation(com.jdc.spring.aop.aspects.CheckResult)"
				returning="result" />
		</aop:aspect>
	</aop:config>
</beans>